// firestore.rules - Security rules for Firestore database
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    function isAdmin() {
      return isAuthenticated() && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    function isTeacher() {
      return isAuthenticated() && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'teacher';
    }
    
    function isVerifiedSchool() {
      return isAuthenticated() && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.schoolVerified == true;
    }
    
    // Users collection
    match /users/{userId} {
      allow read: if isAuthenticated();
      allow create: if isOwner(userId);
      allow update: if isOwner(userId) || isAdmin();
      allow delete: if isAdmin();
    }
    
    // Schools collection
    match /schools/{schoolId} {
      allow read: if true; // Public read
      allow create: if isAdmin();
      allow update: if isAdmin() || (isTeacher() && resource.data.teacherIds.hasAny([request.auth.uid]));
      allow delete: if isAdmin();
    }
    
    // Student profiles
    match /students/{studentId} {
      allow read: if isOwner(studentId) || isTeacher() || isAdmin();
      allow create: if isOwner(studentId);
      allow update: if isOwner(studentId) || isTeacher();
      allow delete: if isAdmin();
      
      // Student progress subcollection
      match /progress/{progressId} {
        allow read: if isOwner(studentId) || isTeacher();
        allow write: if isOwner(studentId);
      }
      
      // Badges subcollection
      match /badges/{badgeId} {
        allow read: if true; // Public badges display
        allow write: if isOwner(studentId) || isAdmin();
      }
    }
    
    // Content collections (read-only for users)
    match /marineSpecies/{speciesId} {
      allow read: if true; // Public content
      allow write: if isAdmin();
    }
    
    match /lessons/{lessonId} {
      allow read: if isAuthenticated();
      allow write: if isAdmin();
    }
    
    match /quizzes/{quizId} {
      allow read: if isAuthenticated();
      allow write: if isAdmin();
      
      // Quiz attempts
      match /attempts/{attemptId} {
        allow read: if isOwner(resource.data.userId) || isTeacher();
        allow create: if isAuthenticated();
        allow update: if false; // No updates to attempts
        allow delete: if isAdmin();
      }
    }
    
    // Citizen Science Data
    match /citizenScience/{projectId} {
      allow read: if true;
      allow create: if isAuthenticated() && isVerifiedSchool();
      allow update: if isAdmin() || (isAuthenticated() && resource.data.createdBy == request.auth.uid);
      allow delete: if isAdmin();
      
      match /submissions/{submissionId} {
        allow read: if true;
        allow create: if isAuthenticated();
        allow update: if isOwner(resource.data.userId) || isAdmin();
        allow delete: if isAdmin();
      }
    }
    
    // Field Visits
    match /fieldVisits/{visitId} {
      allow read: if isAuthenticated();
      allow create: if isTeacher();
      allow update: if isTeacher() && resource.data.schoolId == get(/databases/$(database)/documents/users/$(request.auth.uid)).data.schoolId;
      allow delete: if isAdmin();
    }
    
    // Challenges and Competitions
    match /challenges/{challengeId} {
      allow read: if true;
      allow write: if isAdmin();
      
      match /submissions/{submissionId} {
        allow read: if true;
        allow create: if isAuthenticated();
        allow update: if isOwner(resource.data.userId) && resource.data.status == 'draft';
        allow delete: if isOwner(resource.data.userId) && resource.data.status == 'draft';
      }
    }
    
    // Real-time ocean data (read-only)
    match /oceanData/{dataId} {
      allow read: if true;
      allow write: if false; // Only server functions can write
    }
    
    // Analytics and logs
    match /analytics/{doc} {
      allow read: if isAdmin();
      allow write: if false; // Server-side only
    }
  }
}
